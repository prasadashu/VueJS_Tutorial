{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = {\n  type: \"text\",\n  ref: \"name\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Modal = _resolveComponent(\"Modal\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"Adding elements to the html page\"), _createElementVNode(\"h1\", null, _toDisplayString($data.title), 1 /* TEXT */), _createCommentVNode(\"Adding conditional div tag to toggle component display\"), $data.showModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\"Adding the Vue component imported\"), _createCommentVNode(\"Passing dynamic values to components using 'props'\"), _createCommentVNode(\"A better way is to bind the 'props' with the 'data()'\"), _createCommentVNode(\"Ensure to put a space before '/>' at the end\"), _createVNode(_component_Modal, {\n    header: \"Sign up for Giveaway!\",\n    text: \"Grab your swag at half the price\",\n    data1: $data.data1,\n    data2: $data.data2,\n    theme: \"sale\"\n  }, null, 8 /* PROPS */, [\"data1\", \"data2\"])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"Adding a div tag to put the button in the next line\"), _hoisted_2, _createCommentVNode(\"Adding a component toggle button\"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleModal && $options.toggleModal(...args))\n  }, \"Show Modal\"), _createCommentVNode(\"Creating a reference to the input tag\"), _createCommentVNode(\"Linking a button a function 'handleClick'\"), _createElementVNode(\"input\", _hoisted_3, null, 512 /* NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.handleClick && $options.handleClick(...args))\n  }, \"Click Me\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;gCAiBEA,oBAAO;;EAMAC,IAAI,EAAC,MAAM;EAACC,GAAG,EAAC;;;;6DAtBvBC,uDAAuC,EACvCH,oBAAoB,6BAAbI,WAAK,kBAEZD,6EAA6D,EAClDC,eAAS,kBAApBC,oBAUM,oBATJF,wDAAwC,EACxCA,yEAAyD,EACzDA,4EAA4D,EAC5DA,mEAAmD,EACnDG,aAIqBC;IAJdC,MAAM,EAAC,uBAAuB;IAC/BC,IAAI,EAAC,kCAAkC;IACtCC,KAAK,EAAEN,WAAK;IACZO,KAAK,EAAEP,WAAK;IACbQ,KAAK,EAAC;sFAEdT,0EAA0D,EAC1DU,UAAO,EACPV,uDAAuC,EACvCH,oBAAgD;IAAvCc,OAAK,yCAAEC,qDAAW;KAAE,YAAU,GAEvCZ,4DAA4C,EAC5CA,gEAAgD,EAChDH,oBAA8B,SAA9BgB,UAA8B,+BAC9BhB,oBAA8C;IAArCc,OAAK,yCAAEC,qDAAW;KAAE,UAAQ","names":["_createElementVNode","type","ref","_createCommentVNode","$data","_createElementBlock","_createVNode","_component_Modal","header","text","data1","data2","theme","_hoisted_2","onClick","$options","_hoisted_3"],"sourceRoot":"","sources":["C:\\Academics\\Enterprise Application Development\\Vue JavaScript\\Tutorials\\model-project\\src\\App.vue"],"sourcesContent":["<template>\n  <!--Adding elements to the html page-->\n  <h1>{{ title }}</h1>\n\n  <!--Adding conditional div tag to toggle component display-->\n  <div v-if=\"showModal\">\n    <!--Adding the Vue component imported-->\n    <!--Passing dynamic values to components using 'props'-->\n    <!--A better way is to bind the 'props' with the 'data()'-->\n    <!--Ensure to put a space before '/>' at the end-->\n    <Modal header=\"Sign up for Giveaway!\" \n          text=\"Grab your swag at half the price\" \n          :data1=\"data1\" \n          :data2=\"data2\"\n          theme=\"sale\" />\n  </div>\n  <!--Adding a div tag to put the button in the next line-->\n  <p></p>\n  <!--Adding a component toggle button-->\n  <button @click=\"toggleModal\">Show Modal</button>\n\n  <!--Creating a reference to the input tag-->\n  <!--Linking a button a function 'handleClick'-->\n  <input type=\"text\" ref=\"name\">\n  <button @click=\"handleClick\">Click Me</button>\n</template>\n\n<script>\n// Import 'Modal' Vue component\nimport Modal from './components/Modal.vue'\n\nexport default {\n  name: 'App',\n  // Adding Vue components\n  components: {\n    Modal\n  },\n  // Adding data to be referenced in the file\n  data(){\n    // Add data to be referenced is returned in the title\n    return {\n      title: 'My First Vue App',\n      data1: 'Some data 1',\n      data2: 'Some data 2',\n      showModal: false\n    }\n  },\n  // Adding methods to the file\n  methods: {\n    // Defining a method linked to the 'Click Me' button\n    handleClick(){\n      /*Define a method to get referenced element from html page*/\n\n      // Print the tag which has been referenced\n      console.log(this.$refs.name);\n      \n      // Add class name to 'input' tag on button click\n      this.$refs.name.classList.add('active');\n\n      // Add focus to the 'input' tag on button click\n      // Places the cursor in the input tag\n      this.$refs.name.focus();\n    },\n\n    // Defining method to toggle modal\n    toggleModal(){\n      this.showModal = !this.showModal\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\nh1{\n  border-bottom: 1px solid #ddd;\n  display: inline-block;\n  padding-bottom: 10px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}