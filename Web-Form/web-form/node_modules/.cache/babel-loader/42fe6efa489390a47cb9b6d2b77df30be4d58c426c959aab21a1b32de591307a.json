{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Email:\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Password:\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Role:\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"developer\"\n}, \"Web Developer\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"designer\"\n}, \"Web Designer\", -1 /* HOISTED */);\nconst _hoisted_7 = [_hoisted_5, _hoisted_6];\nconst _hoisted_8 = {\n  class: \"terms\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Accept terms and conditions\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Shaun\", -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Yori\", -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Ashu\", -1 /* HOISTED */);\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Skills:\", -1 /* HOISTED */);\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"submit\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", null, \"Create Account\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"Create a form\"), _createCommentVNode(\"We will skip the 'actions' as it will be taken care by Vue\"), _createCommentVNode(\"'Prevent' action modifier prevents the page from being refreshed on submitting\"), _createElementVNode(\"form\", {\n    onSubmit: _cache[10] || (_cache[10] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_hoisted_1, _createCommentVNode(\"Using the 'v-model' directive to capture the value in 'email' variable\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _hoisted_2, _createCommentVNode(\"Using the 'v-model' directive to capture the value in 'password' variable\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), $data.passwordError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"Password must be at least 6 chars long\")) : _createCommentVNode(\"v-if\", true), _hoisted_4, _createCommentVNode(\"Using the 'v-model' directive to capture the value in 'role' variable\"), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.role = $event)\n  }, _hoisted_7, 512 /* NEED_PATCH */), [[_vModelSelect, $data.role]]), _createElementVNode(\"div\", _hoisted_8, [_createCommentVNode(\"Using the 'v-model' directive to capture the value in 'terms' variable\"), _createCommentVNode(\"Checkboxes are inherently having a boolean functionality\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.terms = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.terms]]), _hoisted_9]), _createCommentVNode(\"Using the 'v-model' directive to capture the value in 'names' list\"), _createCommentVNode(\"Checkboxes with the same 'v-model' data property is used as a list\"), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    value: \"shaun\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.names = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.names]]), _hoisted_10]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    value: \"yori\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.names = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.names]]), _hoisted_11]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    value: \"ashu\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.names = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.names]]), _hoisted_12]), _hoisted_13, _createCommentVNode(\"Using the 'v-model' directive to capture the value in 'tempSkill' variable\"), _createCommentVNode(\"Adding 'keyup' directive to activate when a key is lifted after being pressed\"), _createCommentVNode(\"Using the 'alt' event modifier to prevent the ',' getting inserted\"), _createCommentVNode(\"Linking the directive to the 'addSkill' method\"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.tempSkill = $event),\n    onKeyup: _cache[8] || (_cache[8] = _withModifiers((...args) => $options.addSkill && $options.addSkill(...args), [\"alt\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.tempSkill]]), _createCommentVNode(\"Loop through skills\"), _createCommentVNode(\"Assign unique 'key' for each element\"), _createCommentVNode(\"THE BELOW IMPLEMENTATION IS PREFERRED APPROACH\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.skills, skill => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: skill,\n      class: \"pill\",\n      onClick: $event => $options.deleteSkillAlternative(skill)\n    }, _toDisplayString(skill), 9 /* TEXT, PROPS */, _hoisted_14);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\"Dummy div to test 'deleteSkill' method\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.skills, skill => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: skill,\n      class: \"pill\",\n      onClick: _cache[9] || (_cache[9] = (...args) => $options.deleteSkill && $options.deleteSkill(...args))\n    }, _toDisplayString(skill), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\"Default action of page on submitting is to refresh the page\"), _hoisted_15], 32 /* HYDRATE_EVENTS */), _createCommentVNode(\"Output the values entered in the form\"), _createElementVNode(\"p\", null, \"Email: \" + _toDisplayString($data.email), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Password: \" + _toDisplayString($data.password), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Role: \" + _toDisplayString($data.role), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Terms: \" + _toDisplayString($data.terms), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Names: \" + _toDisplayString($data.names), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["_createElementVNode","class","value","_hoisted_5","_hoisted_6","_createCommentVNode","onSubmit","$options","_hoisted_1","type","required","$data","_hoisted_2","_createElementBlock","_hoisted_3","_hoisted_4","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","onKeyup","_Fragment","skill","key","onClick","_hoisted_15"],"sourceRoot":"","sources":["C:\\Academics\\Enterprise Application Development\\Vue JavaScript\\Web-Form\\web-form\\src\\components\\SingupForm.vue"],"sourcesContent":["<template>\r\n    <!--Create a form-->\r\n    <!--We will skip the 'actions' as it will be taken care by Vue-->\r\n    <!--'Prevent' action modifier prevents the page from being refreshed on submitting-->\r\n    <form @submit.prevent=\"handleSubmit\">\r\n        <label>Email:</label>\r\n        <!--Using the 'v-model' directive to capture the value in 'email' variable-->\r\n        <input type=\"email\" required v-model=\"email\">\r\n\r\n        <label>Password:</label>\r\n        <!--Using the 'v-model' directive to capture the value in 'password' variable-->\r\n        <input type=\"password\" required v-model=\"password\">\r\n        <div v-if=\"passwordError\" class=\"error\">Password must be at least 6 chars long</div>\r\n\r\n        <label>Role:</label>\r\n        <!--Using the 'v-model' directive to capture the value in 'role' variable-->\r\n        <select v-model=\"role\">\r\n            <option value=\"developer\">Web Developer</option>\r\n            <option value=\"designer\">Web Designer</option>\r\n        </select>\r\n\r\n        <div class=\"terms\">\r\n            <!--Using the 'v-model' directive to capture the value in 'terms' variable-->\r\n            <!--Checkboxes are inherently having a boolean functionality-->\r\n            <input type=\"checkbox\" v-model=\"terms\" required>\r\n            <label>Accept terms and conditions</label>\r\n        </div>\r\n\r\n        <!--Using the 'v-model' directive to capture the value in 'names' list-->\r\n        <!--Checkboxes with the same 'v-model' data property is used as a list-->\r\n        <div>\r\n            <input type=\"checkbox\" value=\"shaun\" v-model=\"names\">\r\n            <label>Shaun</label>\r\n        </div>\r\n        <div>\r\n            <input type=\"checkbox\" value=\"yori\" v-model=\"names\">\r\n            <label>Yori</label>\r\n        </div>\r\n        <div>\r\n            <input type=\"checkbox\" value=\"ashu\" v-model=\"names\">\r\n            <label>Ashu</label>\r\n        </div>\r\n\r\n        <label>Skills:</label>\r\n        <!--Using the 'v-model' directive to capture the value in 'tempSkill' variable-->\r\n        <!--Adding 'keyup' directive to activate when a key is lifted after being pressed-->\r\n        <!--Using the 'alt' event modifier to prevent the ',' getting inserted-->\r\n        <!--Linking the directive to the 'addSkill' method-->\r\n        <input type=\"text\" v-model=\"tempSkill\" @keyup.alt=\"addSkill\">\r\n        <!--Loop through skills-->\r\n        <!--Assign unique 'key' for each element-->\r\n        <!--THE BELOW IMPLEMENTATION IS PREFERRED APPROACH-->\r\n        <div v-for=\"skill in skills\" v-bind:key=\"skill\" class=\"pill\" @click=\"deleteSkillAlternative(skill)\">\r\n            {{ skill }}\r\n        </div>\r\n        <!--Dummy div to test 'deleteSkill' method-->\r\n        <div v-for=\"skill in skills\" v-bind:key=\"skill\" class=\"pill\" @click=\"deleteSkill\">\r\n            {{ skill }}\r\n        </div>\r\n\r\n        <!--Default action of page on submitting is to refresh the page-->\r\n        <div class=\"submit\">\r\n            <button>Create Account</button>\r\n        </div>\r\n    </form>\r\n\r\n    <!--Output the values entered in the form-->\r\n    <p>Email: {{ email }}</p>\r\n    <p>Password: {{ password }}</p>\r\n    <p>Role: {{ role }}</p>\r\n    <p>Terms: {{ terms }}</p>\r\n    <p>Names: {{ names }}</p>\r\n</template>\r\n\r\n<!--Two-Way data binding running-->\r\n<!--Form input element data bound to data-->\r\n<!--Data bound to Form input element-->\r\n\r\n<script>\r\nexport default{\r\n    data(){\r\n        return{\r\n            // The 'email' variable is updated when value is typed in form\r\n            email: '',\r\n\r\n            // The 'password' variable is updated when value is typed in form\r\n            password: '',\r\n\r\n            // The 'role' variable is updated when value is typed in form\r\n            role: '',\r\n\r\n            // The 'terms' variable is updated when value is typed in form\r\n            terms: false,\r\n\r\n            // The 'names' list is updated when value is typed in form\r\n            names: [],\r\n\r\n            // The 'tempSkill' variable is updated when value is typed in form\r\n            tempSkill: '',\r\n            // The 'skills' list is updated when value is pushed into it\r\n            skills: [],\r\n\r\n            // Boolena variable for password validation\r\n            passwordError: false\r\n        }\r\n    },\r\n\r\n    methods:{\r\n        addSkill(event){\r\n            // Check if the key lifted is ',' and if there is a string in 'tempSkill' variable\r\n            if (event.key == ',' && this.tempSkill){\r\n                \r\n                // Check if string in 'tempSkill' variable is in 'skills' list\r\n                if (!this.skills.includes(this.tempSkill)){\r\n                    \r\n                    // Push the skill to skills list\r\n                    this.skills.push(this.tempSkill);\r\n                    // Empty the 'tempSkill' variable\r\n                    this.tempSkill = '';\r\n                }\r\n            }\r\n        },\r\n\r\n        // Define a method to delete a skill\r\n        deleteSkill(event){\r\n            /* Function to delete 'skill' from 'skills' list */\r\n            // Print the skill captured\r\n            console.log(event.target.innerHTML);\r\n            // Get the index of the selected skill\r\n            this.skillIndex = this.skills.indexOf(event.target.innerHTML);\r\n            // Remove the skill from the list\r\n            this.skills.splice(this.skillIndex, 1);\r\n        },\r\n\r\n        // Define an alternative method to delete a skill\r\n        deleteSkillAlternative(skill){\r\n            /* Function to delete a 'skill' from 'skills' list */\r\n            // Print the skill captured\r\n            console.log(\"Alternate Function capture: \", skill);\r\n            // Check for the existence of the 'skill' in 'skills' array\r\n            this.skills = this.skills.filter((item) => {\r\n                return skill !== item;\r\n            })\r\n        },\r\n\r\n        // Define function to handle submit event\r\n        handleSubmit(){\r\n            // Check if password entered follows the rules\r\n            this.passwordError = this.password.length > 5 ?\r\n             '': 'Password must be at least 6 chars long'\r\n\r\n            // Output all the text if no errors\r\n            if(!this.passwordError){\r\n                console.log('Email: ', this.email);\r\n                console.log('Password: ', this.password);\r\n                console.log('Role: ', this.role);\r\n                console.log('Skills: ', this.skills);\r\n                console.log('Terms Accepted: ', this.terms);\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n    form{\r\n        max-width: 420px;\r\n        margin: 30px auto;\r\n        background: white;\r\n        text-align: left;\r\n        padding: 40px;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    label{\r\n        color: #aaa;\r\n        display: inline-block;\r\n        margin: 25px 0 15px;\r\n        font-size: 0.6em;\r\n        text-transform: uppercase;\r\n        letter-spacing: 1px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    input, select{\r\n        display: block;\r\n        padding: 10px 6px;\r\n        width: 100%;\r\n        box-sizing: border-box;\r\n        border: none;\r\n        border-bottom: 1px solid #ddd;\r\n        color: #555;\r\n    }\r\n\r\n    input[type=\"checkbox\"]{\r\n        display: inline-block;\r\n        width: 16px;\r\n        margin: 0 10px 0 0;\r\n        position: realtive;\r\n        top: 2px;\r\n    }\r\n\r\n    .pill{\r\n        display: inline-block;\r\n        margin: 20px 10px 0 0;\r\n        padding: 6px 12px;\r\n        background: #eee;\r\n        border-radius: 20px;\r\n        font-size: 12px;\r\n        letter-spacing: 1px;\r\n        font-weight: bold;\r\n        color: #777;\r\n        cursor: pointer;\r\n    }\r\n\r\n    button{\r\n        background: #0b6dff;\r\n        border: 0;\r\n        padding: 10px 20px;\r\n        margin-top: 20px;\r\n        color: white;\r\n        border-radius: 20px;\r\n    }\r\n\r\n    .submit{\r\n        text-align: center;\r\n    }\r\n\r\n    .error{\r\n        color: #ff0062;\r\n        margin-top: 10px;\r\n        font-size: 0.8em;\r\n        font-weight: bold;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}