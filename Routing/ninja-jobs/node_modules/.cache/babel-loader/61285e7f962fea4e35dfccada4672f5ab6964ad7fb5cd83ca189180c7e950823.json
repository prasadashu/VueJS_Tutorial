{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"Display below div only if there are elements in jobs list\"), $data.jobs.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\"Cycle through each job and populate data\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.jobs, job => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: job.id,\n      class: \"job\"\n    }, [_createCommentVNode(\"Name of the route-link comes from route defined in index.js page\"), _createVNode(_component_router_link, {\n      to: {\n        name: 'JobDetails',\n        params: {\n          id: job.id\n        }\n      }\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"h2\", null, _toDisplayString(job.title), 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;;;6DACIA,gFAAgE,EACrDC,UAAI,CAACC,MAAM,kBAAtBC,oBAQM,oBAPFH,+DAA+C,qBAC/CG,oBAKMC,6BALaH,UAAI,EAAXI,GAAG;yBAAfF,oBAKM;MALoBG,GAAG,EAAED,GAAG,CAACE,EAAE;MAAEC,KAAK,EAAC;QACzCR,uFAAuE,EACvES,aAEcC;MAFAC,EAAE;QAAAC;QAAAC;UAAAN,IAAoCF,GAAG,CAACE;QAAE;MAAA;;wBACtD,MAAwB,CAAxBO,oBAAwB,6BAAjBT,GAAG,CAACU,KAAK","names":["_createCommentVNode","$data","length","_createElementBlock","_Fragment","job","key","id","class","_createVNode","_component_router_link","to","name","params","_createElementVNode","title"],"sourceRoot":"","sources":["C:\\Academics\\Enterprise Application Development\\Vue JavaScript\\Routing\\ninja-jobs\\src\\views\\jobs\\JobsView.vue"],"sourcesContent":["<template>\r\n    <!--Display below div only if there are elements in jobs list-->\r\n    <div v-if=\"jobs.length\">\r\n        <!--Cycle through each job and populate data-->\r\n        <div v-for=\"job in jobs\" :key=\"job.id\" class=\"job\">\r\n            <!--Name of the route-link comes from route defined in index.js page-->\r\n            <router-link :to=\"{name: 'JobDetails', params: {id: job.id}}\">\r\n                <h2>{{ job.title }}</h2>\r\n            </router-link>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n    data(){\r\n        return {\r\n            jobs: []\r\n        }\r\n    },\r\n\r\n    // Declaring the 'mounted' life-cycle hook\r\n    mounted(){\r\n        fetch('http://localhost:3000/jobs')\r\n          .then(res => res.json())\r\n          .then(data => this.jobs = data)\r\n          .catch(err => console.log(err.message))\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n    .job h2{\r\n        background: #f4f4f4;\r\n        padding: 20px;\r\n        border-radius: 10px;\r\n        margin: 10px auto;\r\n        max-width: 600px;\r\n        cursor: pointer;\r\n        color: #444;\r\n    }\r\n\r\n    .job h2:hover{\r\n        background: #ddd;\r\n    }\r\n\r\n    .job a{\r\n        text-decoration: none;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}