{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"Accessing 'job.title' when the 'job' variable is set to null will throw an error\"), _createCommentVNode(\"We will enclose the job details in a div\"), _createCommentVNode(\"A condition will be applied to div to only display if the condition is met\"), $data.job ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString($data.job.title), 1 /* TEXT */), _createElementVNode(\"p\", null, \"This job is of \" + _toDisplayString($props.id), 1 /* TEXT */), _createElementVNode(\"p\", null, \"The job is \" + _toDisplayString($data.job.details), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;;6DAEIA,uGAAuF,EACvFA,+DAA+C,EAC/CA,iGAAiF,EACtEC,SAAG,kBAAdC,oBAIM,oBAHFC,oBAAwB,6BAAjBF,SAAG,CAACG,KAAK,kBAChBD,oBAA8B,WAA3B,iBAAe,oBAAGE,SAAE,kBACvBF,oBAAmC,WAAhC,aAAW,oBAAGF,SAAG,CAACK,OAAO","names":["_createCommentVNode","$data","_createElementBlock","_createElementVNode","title","$props","details"],"sourceRoot":"","sources":["C:\\Academics\\Enterprise Application Development\\Vue JavaScript\\Routing\\ninja-jobs\\src\\views\\jobs\\JobDetailsView.vue"],"sourcesContent":["<template>\r\n\r\n    <!--Accessing 'job.title' when the 'job' variable is set to null will throw an error-->\r\n    <!--We will enclose the job details in a div-->\r\n    <!--A condition will be applied to div to only display if the condition is met-->\r\n    <div v-if=\"job\">\r\n        <h2>{{ job.title }}</h2>\r\n        <p>This job is of {{ id }}</p>\r\n        <p>The job is {{ job.details }}</p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n    // We can use either the 'props' or the 'id' in 'data' for routing\r\n    props: ['id'],\r\n    data(){\r\n        return{\r\n            //id: this.$route.params.id,\r\n            job: null\r\n        }\r\n    },\r\n    \r\n    // Declaring the 'mounted' hook to fetch data\r\n    mounted(){\r\n        fetch('http://localhost:3000/jobs/' + this.id)\r\n          .then(res => res.json())\r\n          .then(data => this.jobs = data)\r\n          .catch(err => console.log(err.message))\r\n    }\r\n}\r\n</script>\r\n\r\n<style></style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}